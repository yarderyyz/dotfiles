set -g default-terminal "screen-256color"
source '/Users/leegauthier/Library/Python/3.7/lib/python/site-packages/powerline/bindings/tmux/powerline.conf'

set-option -ga terminal-override ',rxvt-uni*:XT:Ms=\E]52;%p1%s;%p2%s\007'
set-window-option -g mouse on
setw -g mouse on

set -sg escape-time 10

set-option -g allow-rename off

##
# START COPY HACKS
##

# Use vim keybindings in copy mode
# tmux 2.6 doesn't need the 'reattach-to-user-namespace' gymnastics
setw    -g  mode-keys    vi
bind-key -T edit-mode-vi Up                send-keys -X history-up
bind-key -T edit-mode-vi Down              send-keys -X history-down
bind-key -T copy-mode-vi v                 send      -X begin-selection
bind-key -T copy-mode-vi [                 send-keys -X begin-selection
bind-key -T copy-mode-vi y                 send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi Enter             send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi ]                 send-keys -X copy-selection

##
# END COPY HACKS
##

# remap prefix to Control + a
set -g prefix C-a
# bind 'C-a C-a' to type 'C-a'
bind C-a send-prefix
unbind C-b

##
# START COPY HACKS
##
# Set bash to whichever shell you are using, zsh for example
# set-option -g default-command "reattach-to-user-namespace -l zsh" 
# 
# # Remove the default binding for copy-selection, substitute emacs-copy with vi-copy if you're using vi-mode
# unbind -t vi-copy M-w
# 
# # Bind a different key to copy-selection
# bind -t vi-copy c copy-selection
# 
# # Bind prefix-M-w to copy-selection, save selection to buffer, and then pipe it's contents to pbcopy
# bind M-w send-keys c\;\
#          save-buffer /tmp/tmux-buffer\;\
#          run-shell "reattach-to-user-namespace -l bash -c 'cat /tmp/tmux-buffer|pbcopy'"
# 
# setw -g mode-keys vi

##
# END COPY HACKS
##

# set-option -g default-command "reattach-to-user-namespace -l zsh"
set -g repeat-time 10

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind-key -n "C-h" if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind-key -n "C-j" if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind-key -n "C-k" if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind-key -n "C-l" if-shell "$is_vim" "send-keys C-l" "select-pane -R"
#bind-key -n "C-\" if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
set -g default-command "reattach-to-user-namespace -l /bin/zsh"
